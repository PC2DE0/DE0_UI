library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity addr_count is
	generic (
	WIDTH_COUNT		: positive := 3);
  port (
   sdr    	: in  std_logic;							--from the vJTAG
	rst		: in std_logic;
   output 	: out std_logic;
	counter : out std_logic_vector(WIDTH_COUNT-1 downto 0)
	);
end addr_count;

--this counter will count to 2 and reset and send an enable signal 
--on the 0. This is made so that when sending instructions it will only 
--take every second instruction and send.

architecture count of addr_count is
	
	signal count : std_logic_vector(WIDTH_COUNT-1 downto 0);
	
begin
	
	process (sdr, rst)
	begin	
		if (rst ='1') then
			output <= '0';
			count <= (others => '0');
		elsif (sdr'event and sdr = '1') then
			if(unsigned(count) = 3) then
				count <= (others => '0');
			else
				count <= std_logic_vector(unsigned(count) + 1);
			end if;
			if (unsigned(count) = 0) then
				output <= '1';
			else
				output <= '0';
			end if;
		end if;
	end process;
	
	counter <= count;

end count;	
	